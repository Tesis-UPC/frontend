@import '../../../../styles.scss';

.page-container{
  width: 100vw;
  height: 100vh;
  position: relative;
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url('../../../../assets/background-image.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    filter: blur(20px); /* Aplicar efecto de difuminado solo al pseudoelemento */
    z-index: -1;
  }
}

.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 4rem;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

.example-toolbar{
  border-radius: 2rem 2rem 0 0;
  background-color: rgba($color: #FFFFFF, $alpha: .5);
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
  border-radius: 0 0 2rem 2rem;
  background-color: transparent;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}

.container{
  padding: 1rem;
  height: 100%;
  display: grid;
  place-content: center;
  background-color: rgba($color: #FFFFFF, $alpha: .5);
}

.nav-item{
  display: flex;
  color: #FFF;
}

.sidenav{
  background: $primary;
  width: 15rem;
}

.mat-list-item{
  padding: 2rem;
}

.icon{
  margin-right: 1rem;
}

@media (max-width: 600px) {

  .example-container {
    padding: 0;
  }

  .example-sidenav-container, .example-toolbar{
    border-radius: 0;
  }
}
